syntax = "proto3";
package realiotech.network.asset;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "asset/token.proto";
// this line is used by starport scaffolding # 1
import "gogoproto/gogo.proto";

option go_package = "github.com/realiotech/network/x/asset/types";

// Query defines the gRPC querier service.
service Query {
    // Queries a token by index.
	rpc Token(QueryGetTokenRequest) returns (QueryGetTokenResponse) {
		option (google.api.http).get = "/realiotech/network/asset/token/{index}";
	}

	// Queries a list of token items.
	rpc TokenAll(QueryAllTokenRequest) returns (QueryAllTokenResponse) {
		option (google.api.http).get = "/realiotech/network/asset/token";
	}

// this line is used by starport scaffolding # 2
}

message QueryGetTokenRequest {
	  string index = 1;

}

message QueryGetTokenResponse {
	Token token = 1 [(gogoproto.nullable) = false];
}

message QueryAllTokenRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllTokenResponse {
	repeated Token token = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
